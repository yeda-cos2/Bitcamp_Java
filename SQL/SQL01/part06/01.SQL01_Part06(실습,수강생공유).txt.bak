//==============================================//
//==> 아래의 RECORD 입력

INSERT 
INTO emp_test
VALUES(111, '김유신111', 1111, '대리11', '01-01-01', '영업부');

INSERT INTO emp_test
VALUES(222, '김유신222', 2222, '대리22', '2002-02-02', '영업부');

INSERT INTO emp_test
VALUES(333,  '333김유신', 3333, '33대리', '03-03-03', '영업부');

INSERT INTO emp_test
VALUES(444,  '444김유신', 4444, '44대리', '04-04-04', '영업부');

INSERT 
INTO emp_test
VALUES(555, '이순신555', 5555, '부장', '05-05-05', '관리부');

INSERT 
INTO emp_test
VALUES(666, '이순신666', 6666, NULL, '2006-06-06', '관리부');

INSERT
INTO emp_test
VALUES(777, '주몽777', 7777, NULL, '07-07-07', '기획부');

INSERT 
INTO emp_test
VALUES(888, '평민888', NULL, '대리', '2008-08-08', '영업부');

INSERT 
INTO emp_test
VALUES(990, '한국990', 9990, NULL, '09-09-09', '기획부');

INSERT 
INTO emp_test ( id,  name,  title,  dept_name)
VALUES(991, '꺽다리991', '', '영업부');

INSERT INTO emp_test
VALUES(992, '짠돌이992', 9992, '과장', '2009-09-09', '관리부');

SELECT * FROM emp_test;

COMMIT;



//==============================================//
//==================== 실   습 ====================//
//==============================================//
==> 아래의 조건에 맞는 SQL 작성
==> 실습 후 ROLLBACK

1.  salary가 null 이고 title가 null인 직원 검색		:: SELECT

2.  title이 null인 직원 title 계약직 변경				:: UPDATE

3.  월급 2000 이상인  직원 '특판팀' 변경 및
      현 월급에서 무조건 1000 차감 변경			:: UPDATE

4.  2005년 01월01일 이후 입사자 검색			:: SELECT
     (날짜 비교 ??? :: 과거, 현재, 미래)

5.  2005년 01월01일 이후 입사자 이고
      월급이 6000원 이하인 직원 검색				:: SELECT 
//==============================================//

select
name
from emp_test
where salary is null and title is null;

update emp_test
set title='계약직'
where title is null;

update emp_test
set dept_name='특판팀', salary=salary-1000
where salary>=2000;

select
name
from emp_test
where in_date >='2005-01-01';

select
name
from emp_test
where in_date >='2005-01-01'and salary<=6000;